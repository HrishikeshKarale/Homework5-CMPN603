#include<iostream>
#include "card.h"
#include <sstream>
#include <string>

using namespace std;

Card::Card()
{

}

/* Your code here */

/*
* This is a parameterized  Constructor which excepts two parameters which are
* of type Enum :SUITS and COUNT. The values of these parameters are initialized
* to class vairables for further use.
*/
Card::Card( Card::SUITS _suit, Card::COUNT _val )
{
	//sets value of suit
	suit = _suit;
	//set value of count
	value = _val;
}

/*
* The function str is a no parameter function which returns a string generated by 
* functions such as valToStr() and suitToStr() which are then stores in
* OutputStringStream and then returned after calling str() on it. 
*/
std::string Card::str()
{
   //Object of oStrinfStream is made
   ostringstream os;
   //valToStr() and suitToStr() are called and initialized to os
   os << valToStr() <<suitToStr();
   //value of os is returned to the calling function as a string by using str()
   return os.str();
}

/*
*This function returns value of card by using getValue() and returning
* customized strings as output.
*/
std::string Card::valToStr()
{
   //value of card is accessed using getValue() 
   switch(getValue())
   {
      case 2: return "2";
         break;
      case 3: return "3";
         break;
      case 4: return "4";
         break;
      case 5: return "5";
         break;
      case 6: return "6";
         break;
      case 7: return "7";
         break;
      case 8: return "8";
         break;
      case 9: return "9";
         break;
      case 10: return "10";
         break;
      case 11: return "J";
         break;
      case 12: return "Q";
         break;
      case 13: return "K";
         break;
      case 14: return "A";
         break;
      default: break;
   }
}


/*
*This function returns value of card by using getSuit() and returning
* customized strings as output.
*/
std::string Card::suitToStr()
{
   //value of card is accessed using getSuit() 
   switch(getSuit())
   {
      case 1: return "C";
         break;
      case 2: return "D";
         break;
      case 3: return "H";
         break;
      case 4: return "S";
         break;
      default: break;
   }
}

/*
* this function reutrns value of suit as s type SUITES(enum).
*/
Card::SUITES Card::getSuit()
{
   //returns suit of suit for current object
   return this->suit;
}

/*
* this function reutrns value of suit as s type SUITES(enum).
*/
Card::COUNT Card::getValue()
{
   //returns value of card for current object
   return this->value;
}